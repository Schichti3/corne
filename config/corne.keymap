/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        esc_on_raise: esc_on_raise {
            compatible = "zmk,behavior-hold-tap";
            label = "ESC_ON_RAISE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <50>;
        };

        bkspace_on_tab: bkspace_on_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "BKSPACE_ON_TAB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <50>;
        };

        lguiandshift: lguiandshift {
            compatible = "zmk,behavior-hold-tap";
            label = "LGUIANDSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <130>;
            quick-tap-ms = <35>;
        };
    };

    combos {
        compatible = "zmk,combos";

        layer_3 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp LEFT_CONTROL  &kp Q  &kp W  &kp E                     &kp R                &kp T        &kp Z       &kp U                        &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_CONTROL  &kp A  &kp S  &kp D                     &kp F                &kp G        &kp H       &kp J                        &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Y  &kp X  &kp C                     &kp V                &kp B        &kp N       &kp M                        &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                &lguiandshift LSHFT LWIN  &esc_on_raise 1 ESC  &kp SPACE    &kp RETURN  &bkspace_on_tab 2 BACKSPACE  &kp LALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1    |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | LCTRL| BTCLR | BT0 | BT1 | BT2 | BT3 |   | LFT | DWN |  UP | RGT |     |      |
            // | ESC  |       | HOME| PGUP| PGDN| END |   |     |     |     |     |     |      |
            //                      | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1  &kp N2  &kp N3    &kp N4   &kp N5       &kp N6    &kp N7    &kp N8        &kp N9        &kp N0        &kp BSPC
&trans   &kp F1  &kp F2  &kp F3    &kp F4   &kp F5       &kp LEFT  &kp DOWN  &kp UP        &kp RIGHT     &kp F11       &kp F12
&trans   &kp F8  &kp F9  &kp F10   &kp F11  &kp F12      &trans    &trans    &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
                         &kp LGUI  &trans   &kp SPACE    &kp RET   &trans    &kp LALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |   !   |   @   |   #   |   $   |   %   |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |RGB_TOG|RGB_HUI|RGB_SAI|RGB_VAI|       |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |RGB_MOD|RGB_HUD|RGB_SAD|RGB_VAD|QK_BOOT|   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                            | GUI |     |  SPC  |   | ENT |     | ALT |

            bindings = <
&kp LEFT_CONTROL  &kp EXCL         &kp AT           &kp HASH         &kp DLLR         &kp PRCNT      &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LEFT_CONTROL  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &trans         &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LEFT_CONTROL  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &bootloader    &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                                    &kp LGUI         &trans           &kp SPACE      &kp RET    &trans     &kp LALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &kp LEFT_CONTROL  &kp LEFT_SHIFT    &kp ESCAPE  &kp EXCLAMATION    &trans  &trans         &kp LEFT_GUI  &kp L   &trans  &trans
&trans  &trans  &kp LEFT_CONTROL  &kp LEFT_SHIFT    &kp TAB     &kp P              &trans  &kp LEFT_ALT   &kp TAB       &trans  &trans  &trans
&trans  &trans  &trans            &kp LEFT_CONTROL  &kp TAB     &trans             &trans  &kp RIGHT_ALT  &trans        &trans  &trans  &trans
                                  &trans            &trans      &trans             &trans  &trans         &trans
            >;
        };
    };
};
